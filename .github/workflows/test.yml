name: Unit Tests

on:
  pull_request:
  push:
    branches:
      - production
      - release/*

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    continue-on-error: ${{ matrix.can_fail }}
    strategy:
      fail-fast: true
      matrix:
        php: [7.4]
        wp_version: ["latest"]
        can_fail: [false]

    name: ${{ matrix.php }} @ ${{ matrix.wp_version }}

    env:
      CACHEDIR: /tmp/test-cache
      WP_CORE_DIR: /tmp/wordpress/
      WP_VERSION: ${{ matrix.wp_version }}
      WP_MULTISITE: ${{ matrix.multisite }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up caching
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
            /tmp/test-cache
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          tools: composer:v2
          coverage: none

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer install

      - name: Install WordPress and Copy Project
        shell: bash
        run: |
          bash bin/install-wp-tests.sh wordpress_unit_tests root '' 127.0.0.1 $WP_VERSION
          composer global require "phpunit/phpunit=4.8.*|5.7.*"

          # Go into the core directory and replace wp-content.
          rm -rf ${WP_CORE_DIR}/wp-content/plugins/wp-asset-manager
          rsync -aWq --no-compress . ${WP_CORE_DIR}/wp-content/plugins/wp-asset-manager

      - name: Run Unit Tests
        shell: bash
        run: |
          cd ${WP_CORE_DIR}/wp-content/plugins/wp-asset-manager
          phpunit
          WP_MULTISITE=1 phpunit

      - name: Run phpcs
        shell: bash
        run: |
          cd ${WP_CORE_DIR}/wp-content/plugins/wp-asset-manager
          composer run phpcs